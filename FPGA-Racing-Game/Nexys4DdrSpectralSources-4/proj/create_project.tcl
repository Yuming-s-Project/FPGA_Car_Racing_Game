#
# Vivado (TM) v2014.2 (64-bit)
#
# create_project.tcl: Tcl script for re-creating project 'Nexys4Spectral'
#
# Generated by Vivado on Tue Feb 17 14:45:02 +0200 2015
# IP Build 924643 on Fri May 30 09:20:16 MDT 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************

# change directory to the current .tcl file

cd [file dirname [info script]]

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project Nexys4Spectral ./Nexys4Spectral

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects Nexys4Spectral]
set_property "default_lib" "xil_defaultlib" $obj
set_property "part" "xc7a100tcsg324-1" $obj
set_property "simulator_language" "VHDL" $obj
set_property "target_language" "VHDL" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/mul/mul.vhd"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/mul/mul.ngc"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/lp_fir/lp_fir.vhd"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/lp_fir/lp_fir.ngc"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/hb_fir/hb_fir.vhd"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/hb_fir/hb_fir.ngc"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/clk_gen/clk_gen.vhd"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/cic/cic.vhd"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/cic/cic.ngc"]"\
 "[file normalize "$origin_dir/../src/hdl/sources_PDM_RefProj/new/hp_rc.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/sources_PDM_RefProj/new/pdm_filter.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/sources_PDM_RefProj/new/comb.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/sources_PDM_RefProj/new/allpass.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/led_controller.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/DisplayDefinition.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/VgaCtrl.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/sources_PDM_RefProj/new/audio_demo.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/LedStringCtrl.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/ImgCtrl.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/FftBlock.vhd"]"\
 "[file normalize "$origin_dir/../src/hdl/TopNexys4Spectral.vhd"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/lp_fir/lp_fir.mif"]"\
 "[file normalize "$origin_dir/../src/others/ngc_PDM_RefProj/hb_fir/hb_fir.mif"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../src/others/ngc_PDM_RefProj/mul/mul.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/mul/mul.ngc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "NGC" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/lp_fir/lp_fir.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/lp_fir/lp_fir.ngc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "NGC" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/hb_fir/hb_fir.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/hb_fir/hb_fir.ngc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "NGC" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/clk_gen/clk_gen.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/cic/cic.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/cic/cic.ngc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "NGC" $file_obj

set file "$origin_dir/../src/hdl/sources_PDM_RefProj/new/hp_rc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/sources_PDM_RefProj/new/pdm_filter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/sources_PDM_RefProj/new/comb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/sources_PDM_RefProj/new/allpass.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/led_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/DisplayDefinition.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/VgaCtrl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/sources_PDM_RefProj/new/audio_demo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/LedStringCtrl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/ImgCtrl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/FftBlock.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/hdl/TopNexys4Spectral.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/lp_fir/lp_fir.mif"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "Memory Initialization Files" $file_obj

set file "$origin_dir/../src/others/ngc_PDM_RefProj/hb_fir/hb_fir.mif"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "Memory Initialization Files" $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "TopNexys4Spectral" $obj

# Create 'xfft_1' fileset (if not found)
if {[string equal [get_filesets -quiet xfft_1] ""]} {
  create_fileset -blockset xfft_1
}

# Set 'xfft_1' fileset object
set obj [get_filesets xfft_1]
set files [list \
 "[file normalize "$origin_dir/../src/ip/xfft_1/xfft_1.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'xfft_1' fileset file properties for remote files
# None

# Set 'xfft_1' fileset file properties for local files
# None

# Set 'xfft_1' fileset properties
set obj [get_filesets xfft_1]
set_property "top" "xfft_1" $obj

# Create 'blk_mem_gen_0' fileset (if not found)
if {[string equal [get_filesets -quiet blk_mem_gen_0] ""]} {
  create_fileset -blockset blk_mem_gen_0
}

# Set 'blk_mem_gen_0' fileset object
set obj [get_filesets blk_mem_gen_0]
set files [list \
 "[file normalize "$origin_dir/../src/ip/blk_mem_gen_0/blk_mem_gen_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'blk_mem_gen_0' fileset file properties for remote files
# None

# Set 'blk_mem_gen_0' fileset file properties for local files
# None

# Set 'blk_mem_gen_0' fileset properties
set obj [get_filesets blk_mem_gen_0]
set_property "top" "blk_mem_gen_0" $obj

# Create 'clk_wiz_0' fileset (if not found)
if {[string equal [get_filesets -quiet clk_wiz_0] ""]} {
  create_fileset -blockset clk_wiz_0
}

# Set 'clk_wiz_0' fileset object
set obj [get_filesets clk_wiz_0]
set files [list \
 "[file normalize "$origin_dir/../src/ip/clk_wiz_0/clk_wiz_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'clk_wiz_0' fileset file properties for remote files
# None

# Set 'clk_wiz_0' fileset file properties for local files
# None

# Set 'clk_wiz_0' fileset properties
set obj [get_filesets clk_wiz_0]
set_property "top" "clk_wiz_0" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/constraints/Nexys4DDR_Master.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/../src/constraints/Nexys4DDR_Master.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "[file normalize "$origin_dir/../src/constraints/Nexys4DDR_Master.xdc"]" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "TopNexys4Spectral" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property "part" "xc7a100tcsg324-1" $obj

# Create 'xfft_1_synth_1' run (if not found)
if {[string equal [get_runs -quiet xfft_1_synth_1] ""]} {
  create_run -name xfft_1_synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset xfft_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs xfft_1_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs xfft_1_synth_1]
}
set obj [get_runs xfft_1_synth_1]
set_property "constrset" "xfft_1" $obj
set_property "part" "xc7a100tcsg324-1" $obj

# Create 'blk_mem_gen_0_synth_1' run (if not found)
if {[string equal [get_runs -quiet blk_mem_gen_0_synth_1] ""]} {
  create_run -name blk_mem_gen_0_synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset blk_mem_gen_0
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs blk_mem_gen_0_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs blk_mem_gen_0_synth_1]
}
set obj [get_runs blk_mem_gen_0_synth_1]
set_property "constrset" "blk_mem_gen_0" $obj
set_property "part" "xc7a100tcsg324-1" $obj

# Create 'clk_wiz_0_synth_1' run (if not found)
if {[string equal [get_runs -quiet clk_wiz_0_synth_1] ""]} {
  create_run -name clk_wiz_0_synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset clk_wiz_0
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs clk_wiz_0_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs clk_wiz_0_synth_1]
}
set obj [get_runs clk_wiz_0_synth_1]
set_property "constrset" "clk_wiz_0" $obj
set_property "part" "xc7a100tcsg324-1" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "part" "xc7a100tcsg324-1" $obj

# Create 'xfft_1_impl_1' run (if not found)
if {[string equal [get_runs -quiet xfft_1_impl_1] ""]} {
  create_run -name xfft_1_impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset xfft_1 -parent_run xfft_1_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs xfft_1_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs xfft_1_impl_1]
}
set obj [get_runs xfft_1_impl_1]
set_property "constrset" "xfft_1" $obj
set_property "part" "xc7a100tcsg324-1" $obj

# Create 'blk_mem_gen_0_impl_1' run (if not found)
if {[string equal [get_runs -quiet blk_mem_gen_0_impl_1] ""]} {
  create_run -name blk_mem_gen_0_impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset blk_mem_gen_0 -parent_run blk_mem_gen_0_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs blk_mem_gen_0_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs blk_mem_gen_0_impl_1]
}
set obj [get_runs blk_mem_gen_0_impl_1]
set_property "constrset" "blk_mem_gen_0" $obj
set_property "part" "xc7a100tcsg324-1" $obj

# Create 'clk_wiz_0_impl_1' run (if not found)
if {[string equal [get_runs -quiet clk_wiz_0_impl_1] ""]} {
  create_run -name clk_wiz_0_impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset clk_wiz_0 -parent_run clk_wiz_0_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs clk_wiz_0_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs clk_wiz_0_impl_1]
}
set obj [get_runs clk_wiz_0_impl_1]
set_property "constrset" "clk_wiz_0" $obj
set_property "part" "xc7a100tcsg324-1" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:Nexys4Spectral"
